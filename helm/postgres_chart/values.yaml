# Default values for postgres-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
chartName: postgres

replicaCount: 1

strategy:
  type: Recreate

image:
  repository: postgres
  pullPolicy: IfNotPresent
  tag: "16.2-alpine3.19"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "pgbd"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: { app: postgres }

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: pgbd
  type: ClusterIP
  port: 5432

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 2048Mi
  requests:
    cpu: 200m
    memory: 1536Mi

livenessProbe:
  exec:
    command:
      - sh
      - -c
      - exec pg_isready --host localhost
  initialDelaySeconds: 5
  periodSeconds: 20

readinessProbe:
  exec:
    command:
      - sh
      - -c
      - exec pg_isready --host localhost
  initialDelaySeconds: 5
  failureThreshold: 3
  periodSeconds: 20

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: postgres-storage
    persistentVolumeClaim:
      claimName: postgres-pvc
  - name: postgres-configmap
    configMap:
      name: postgres-cm

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: postgres-storage
    mountPath: /var/lib/postgresql/data

nodeSelector: {}

tolerations: []

affinity: {}

secretName: my-secret

env:
  - name: POSTGRES_USER
    value: "postgres"
  - name: POSTGRES_PASSWORD
    value: "83226989"
  - name: POSTGRES_DB
    value: "ptransportes"

configMap:
  enabled: true
  name: postgres-cm
  data:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: 83226989
    POSTGRES_DB: ptransportes

persistentVolume:
  enabled: true
  storage: 5Gi
  volumeMode: Filesystem
  accessModes: ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath: "/mnt/data"

persistentVolumeClaim:
  enabled: true
  accessModes: ReadWriteMany
  storageClassName: standard
  storage: 5Gi